@model ExamScoringApp.Models.Base.EnrollVM



@{
    ViewBag.Title = "Enroll";
}

<div class="row wrapper border-bottom white-bg page-heading">
    <div class="col-sm-4">
        <h2>Enroll</h2>
        <ol class="breadcrumb">
            <li>
                @Html.ActionLink("List", "Index")
            </li>
            <li class="active">
                <strong>Enroll</strong>
            </li>
        </ol>
    </div>
</div>

<div class="wrapper wrapper-content animated fadeInRight">
    <div class="row">
        <div class="col-lg-12">
            <div class="ibox float-e-margins">
                <div class="ibox-title">
                    <h5>Enroll in Exam</h5>
                </div>
                <div class="ibox-content">


                    @* Content *@
                    <div class="form-horizontal">

                        <div class="form-group">
                            <label class="control-label col-md-3"> Exam </label>
                            <label style="text-align:left" class="control-label col-md-9"> @Model.Exam.Course, @Model.Exam.DateTime.Year </label>
                        </div>

                        <div class="form-group">
                            <label class="control-label col-md-3"> Select the students to be enrolled </label>
                            <div class="col-md-9">
                                @foreach (var student in Model.Students)
                                {
                                    var isEnrolled = false;
                                    if (Model.CurrentEnrollments.Any(e=>e.StudentId == new MongoDB.Bson.ObjectId(student.Id)))
                                    {
                                        isEnrolled = true;
                                    }
                                    <div class="checkbox checkbox-primary">
                                        <input class="student-check" id="@student.Id" type="checkbox" checked="@isEnrolled">
                                        <label>
                                            @student.StudentName, @student.StudentNo
                                        </label>
                                    </div>

                                }
                                <button id="selectAll" value="Save" class="m-t-md btn btn-default"> Select all</button>
                                <button id="deselectAll" value="Save" class="m-t-md  btn btn-white"> Deselect all</button>

                            </div>
                        </div>

                        <div class="form-group">
                            <div class="m-t-lg col-md-offset-3 col-md-10">
                                <button onclick="save()" id="enroll-btn" value="Save" class="btn btn-primary"> Save</button>
                                @Html.ActionLink("Cancel", "Index", null, new { @class = "btn btn-white" })
                            </div>
                        </div>

                    </div>


                </div>
            </div>
        </div>
    </div>
</div>



@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

<script src="~/Content/js/rangy-core.min.js"></script>
<script src="~/Content/js/rangy-classapplier.js"></script>
<script src="~/Content/js/rangy-highlighter.js"></script>

<script src="~/Scripts/draggable/jquery.min.js"></script>
<script src="~/Scripts/sweetalert.min.js"></script>
<script src="~/Content/js/lodash.min.js"></script>


<script>
    document.getElementById("selectAll").addEventListener("click", (e) => {
        checks = Array.from(document.querySelectorAll('.student-check'))
        checks.forEach(c => c.checked = true)
    });

    document.getElementById("deselectAll").addEventListener("click", (e) => {
        checks = Array.from(document.querySelectorAll('.student-check'))
        checks.forEach(c => c.checked = false)
    });



    function save() {
    var examId = '@Model.Exam.Id';
    studentsIds = Array.from(document.getElementsByClassName('student-check')).filter(a=>a.checked).map(a=>a.id);
    data = {
        "examId": examId,
        "studentsIds": studentsIds,
        }
        console.log(data);

    $.ajax({
        url: urlPrefix + '/Exams/EnrollStudents',
        type: 'POST',
        data: JSON.stringify(data),
        contentType: 'application/json; charset=utf-8',
        success: function (response) {
            //alert();
            if (response.success)
                advAlert("Success!", response.responseText, "success")
            else
                advAlert("Error!", response.responseText, "error")
        },
        error: function (e) {
            advAlert("Error!", "Try again later", "error")
        }
    });

    }


    function advAlert(title, text, type) {
    swal(title, text, type).then((value) => {
        if (type == "success") {
                window.location.href = window.location.origin + urlPrefix + `/Exams/Index`;
        }
    });
}



</script>










